name: aws-pod-identity-webhook
namespace: kube-system
serviceType: managed

# The prefix for annotations used on ServiceAccounts, e.g. `eks.amazonaws.com/role-arn`
annotationPrefix: eks.amazonaws.com

project:
  branch: "[[ .Branch ]]"
  commit: "[[ .SHA ]]"

image:
  registry: docker.io
  name: giantswarm/amazon-eks-pod-identity-webhook
  tag: v0.4.0
  pullPolicy: IfNotPresent

# We currently have two images available to us as we move towards https://github.com/giantswarm/roadmap/issues/1640
# This will change when we have changes in our fork merged back upstream.
# We have to support two images for now because the kiam-agent "vintage" clusters on older release versions (< v18.1.0) doesn't allow
# for the network calls in changes made and this causes the deployment to fail.
gsImage:
  name: giantswarm/amazon-eks-pod-identity-webhook-gs
  tag: v0.2.0

# provider
# Identifies the cloud provider. This *must*
# be set. If this is installed as a default app from the default-catalog then this
# value is set dynamically and will be overridden.
provider: CHANGEME

ports:
  webhook: 9443
  metrics: 9999

resources:
  requests:
    cpu: 100m
    memory: 50Mi
  limits:
    cpu: 100m
    memory: 80Mi

verticalPodAutoscaler:
  enabled: true

aws:
  tokenAudience: sts.amazonaws.com

restarter:
  enabled: true
  schedule: "*/5 * * * *"
  image:
    name: giantswarm/aws-pod-identity-restarter
    tag: ""
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  resources:
    requests:
      cpu: 100m
      memory: 50Mi
    limits:
      cpu: 100m
      memory: 80Mi

# Add seccomp to pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

# Add seccomp to container security context
securityContext:
  seccompProfile:
    type: RuntimeDefault
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

global:
  rodSecurityStandards:
    enforced: false

